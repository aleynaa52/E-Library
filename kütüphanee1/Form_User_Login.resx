<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>